'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrCode = exports.ErrMsg = void 0;
exports.ErrMsg = {
    MethodParamNotSupported: (method, index) => {
        return `Parameter not supported: method=${method}, index=${index}`;
    },
    ArgumentMissingOrInvalid: (method, arg) => {
        let err = `Argument missing or invalid: method=${method}`;
        if (arg) {
            err += `, arg=${arg}`;
        }
        ;
        return err;
    },
    SubscriptionIdNotFound: (id) => {
        return `Subscription not found: id=${id}`;
    },
    InvalidSubscriptionName: (name) => {
        return `Invalid subscription: name=${name}`;
    }
};
// Source https://docs.infura.io/infura/networks/ethereum/json-rpc-methods
exports.ErrCode = {
    // Standard
    ParseError: -32700,
    InvalidRequest: -32600,
    MethodNotFound: -32601,
    InvalidParams: -32602,
    InternalError: -32603,
    // https://github.com/ethereum/go-ethereum/blob/master/rpc/errors.go
    Default: -32000
};
//# sourceMappingURL=error.js.map