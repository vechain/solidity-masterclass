'use strict';

var En = require('fast-json-stable-stringify');
var sdkErrors = require('@vechain/sdk-errors');
var viem = require('viem');
var T = require('@noble/curves/abstract/utils');
var Je = require('@noble/hashes/utils');
var sha3 = require('@noble/hashes/sha3');
var z = require('@scure/bip32');
var lt = require('@scure/bip39');
var base = require('@scure/base');
var st = require('@noble/hashes/sha256');
var secp256k1 = require('@noble/curves/secp256k1');
var blake2b = require('@noble/hashes/blake2b');
var rlp = require('@ethereumjs/rlp');
var utils = require('@noble/ciphers/utils');
var english = require('@scure/bip39/wordlists/english');
var sdkLogging = require('@vechain/sdk-logging');
var ethers = require('ethers');
var aes = require('@noble/ciphers/aes');
var scrypt = require('@noble/hashes/scrypt');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

function _interopNamespace(e) {
	if (e && e.__esModule) return e;
	var n = Object.create(null);
	if (e) {
		Object.keys(e).forEach(function (k) {
			if (k !== 'default') {
				var d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: function () { return e[k]; }
				});
			}
		});
	}
	n.default = e;
	return Object.freeze(n);
}

var En__default = /*#__PURE__*/_interopDefault(En);
var T__namespace = /*#__PURE__*/_interopNamespace(T);
var Je__namespace = /*#__PURE__*/_interopNamespace(Je);
var z__namespace = /*#__PURE__*/_interopNamespace(z);
var lt__namespace = /*#__PURE__*/_interopNamespace(lt);
var st__namespace = /*#__PURE__*/_interopNamespace(st);

var Bt=Object.defineProperty;var Vt=(n,e)=>{for(var t in e)Bt(n,t,{get:e[t],enumerable:!0});};var Dt={};Vt(Dt,{ABI:()=>b,ABIContract:()=>B,ABIEvent:()=>A,ABIFunction:()=>E,ABIItem:()=>N,Account:()=>be,Address:()=>m,Blake2b256:()=>g,BlockId:()=>ee,BlockRef:()=>Te,BloomFilter:()=>J,BufferKind:()=>U,Certificate:()=>ke,Clause:()=>We,Coin:()=>L,CompactFixedHexBlobKind:()=>Y,ERC1155_ABI:()=>xt,ERC20_ABI:()=>wt,ERC721_ABI:()=>de,FixedHexBlobKind:()=>S,FixedPointNumber:()=>l,HDKey:()=>O,Hex:()=>s,HexBlobKind:()=>F,HexInt:()=>w,HexUInt:()=>c,Keccak256:()=>v,MAINNET_NETWORK:()=>Rt,Mnemonic:()=>Oe,NUMERIC_REGEX:()=>_n,NumericKind:()=>h,OptionalFixedHexBlobKind:()=>K,Quantity:()=>Le,RLP:()=>C,RLPProfiler:()=>R,Revision:()=>He,SOLO_NETWORK:()=>St,ScalarKind:()=>f,Secp256k1:()=>d,Sha256:()=>x,TESTNET_NETWORK:()=>Ft,ThorId:()=>Ce,Transaction:()=>ze,Txt:()=>p,Units:()=>exports.Units,VET:()=>Q,VIP180_ABI:()=>_e,VIP181_ABI:()=>Gn,VIP210_ABI:()=>Mn,VTHO:()=>X,VTHO_ADDRESS:()=>Zn,ZERO_ADDRESS:()=>Wn,ZERO_BYTES:()=>Xe,assertCompactFixedHexBlobBuffer:()=>De,assertFixedHexBlobKindBuffer:()=>Se,assertFixedHexBlobKindData:()=>Fe,assertValidHexBlobKindData:()=>Re,assertValidNumericKindBuffer:()=>Ne,dataUtils:()=>Yn,decodeBufferToHexWithLeadingZeros:()=>ln,decodeBufferToNumberOrHex:()=>xe,encodeBigIntToBuffer:()=>we,encodeCompactFixedHexBlob:()=>Be,keystore:()=>Kn,networkInfo:()=>Qn,validateNumericKindData:()=>ve});var s=class n{static NEGATIVE=-1;static POSITIVE=1;static PREFIX="0x";static RADIX=16;static REGEX_HEX=/^-?(0x)?[0-9a-f]*$/i;static REGEX_HEX_PREFIX=/^-?0x/i;digits;sign;constructor(e,t,i=r=>r.toLowerCase()){this.digits=i(t),this.sign=e;}get abs(){return new n(n.POSITIVE,this.digits)}get bi(){return BigInt(this.sign)*T__namespace.hexToNumber(this.digits)}get bytes(){return T__namespace.hexToBytes(this.alignToBytes().digits)}get n(){if(this.isNumber())return new DataView(this.bytes.buffer).getFloat64(0);throw new sdkErrors.InvalidOperation("Hex.n","not an IEEE 754 float 64 number",{hex:this.toString()})}alignToBytes(){return this.digits.length%2===0?this:new n(this.sign,"0"+this.digits)}compareTo(e){if(this.sign===e.sign){let t=Math.max(this.digits.length,e.digits.length),i=this.fit(t).bytes,r=e.fit(t).bytes,a=0,o=0;for(;o===0&&a<i.length;)o=i[a]-r[a],a++;return o}return this.sign-e.sign}fit(e){if(e<this.digits.length){let t=0;for(;this.digits.length-t>e&&this.digits.at(t)==="0";)t++;if(this.digits.length-t===e)return new n(this.sign,this.digits.slice(t));throw new sdkErrors.InvalidDataType("Hex.fit",`can't fit in ${e} digits`,{digits:e,hex:this})}return e>this.digits.length?new n(this.sign,"0".repeat(e-this.digits.length)+this.digits):this}isEqual(e){return this.compareTo(e)===0}isNumber(){return this.digits.length===32}static isValid(e){return n.REGEX_HEX.test(e)}static isValid0x(e){return n.REGEX_HEX_PREFIX.test(e)&&n.isValid(e)}static of(e){try{if(typeof e=="bigint")return e<0n?new n(this.NEGATIVE,T__namespace.numberToHexUnpadded(-1n*e)):new n(this.POSITIVE,T__namespace.numberToHexUnpadded(e));if(typeof e=="number"){let t=new DataView(new ArrayBuffer(16));return t.setFloat64(0,e),new n(e<0?this.NEGATIVE:this.POSITIVE,T__namespace.bytesToHex(new Uint8Array(t.buffer)))}else if(typeof e=="string"){if(!this.isValid(e))throw new sdkErrors.InvalidDataType("Hex.of","not an hexadecimal string",{exp:e});return e.startsWith("-")?new n(this.NEGATIVE,this.REGEX_HEX_PREFIX.test(e)?e.slice(3):e.slice(1)):new n(this.POSITIVE,this.REGEX_HEX_PREFIX.test(e)?e.slice(2):e)}return new n(this.POSITIVE,T__namespace.bytesToHex(e))}catch(t){throw new sdkErrors.InvalidDataType("Hex.of","not an hexadecimal expression",{exp:`${e}`},t)}}static random(e){if(e>0)return n.of(Je__namespace.randomBytes(e));throw new sdkErrors.InvalidDataType("Hex.random","bytes argument not > 0",{bytes:e})}toString(){return (this.sign<0?"-0x":"0x")+this.digits}};var b=class n{types;values;constructor(e=[],t=[]){this.types=typeof e=="string"?viem.parseAbiParameters(e):e,this.values=t;}compareTo(e){return this.types.forEach((t,i)=>{if(t!==e.types[i])return -1}),this.values.forEach((t,i)=>{if(t!==e.values[i])return 1}),0}isEqual(e){return this.compareTo(e)===0}get bi(){throw new sdkErrors.InvalidOperation("ABI.bi","There is no big integer representation for an ABI.",{data:""})}get bytes(){return this.toHex().bytes}get n(){throw new sdkErrors.InvalidOperation("ABI.n","There is no number representation for an ABI.",{data:""})}static of(e,t){try{return new n(e,t)}catch(i){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABI.of","Types and values must be valid ABI parameters.",{types:e,values:t},i)}}static ofEncoded(e,t){try{let i=s.of(t),r;if(typeof e=="string"){let a=viem.parseAbiParameters(e);r=viem.decodeAbiParameters(a,i.bytes);}else r=viem.decodeAbiParameters([...e],i.bytes);return new n(e,[...r])}catch(i){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABI.of","Decoding failed: Data must be a valid ABI type with corresponding valid data.",{types:e,data:t},i)}}parseObjectValues(e){let t=[],i=r=>{let a=[];for(let o in r)if(Object.prototype.hasOwnProperty.call(r,o)){let u=r[o];typeof u=="object"&&u!==null?a.push(i(u)):a.push(u);}return a};return t.push(...i(e)),t}getFirstDecodedValue(){return this.values[0]instanceof Object?this.parseObjectValues(this.values[0]):this.values[0]}toHex(){try{let e=viem.encodeAbiParameters(this.types,this.values);return s.of(e)}catch(e){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABI.toHex","Encoding failed: Data must be a valid ABI type with corresponding valid data.",{types:this.types,values:this.values},e)}}};var N=class extends b{signature;stringSignature;constructor(e){switch(super(),typeof e){case"string":this.stringSignature=e;break;case"object":this.stringSignature=viem.toFunctionSignature(e);break;default:this.stringSignature="";}this.signature=typeof e=="string"?viem.parseAbiItem([e]):e;}static ofSignature(e,t){return new e(t)}format(e="string"){return e==="json"?JSON.stringify(this.signature):this.stringSignature}get signatureHash(){return viem.toFunctionHash(this.stringSignature)}compareTo(e){return super.compareTo(e)!==0?-1:this.stringSignature.localeCompare(e.stringSignature)}};var A=class n extends N{abiEvent;constructor(e){try{super(e),this.abiEvent=this.signature;}catch(t){throw new sdkErrors.InvalidAbiItem("ABIEvent constructor","Initialization failed: Cannot create Event ABI. Event format is invalid.",{type:"event",value:e},t)}}static parseLog(e,t){try{return viem.decodeEventLog({abi:e,data:t.data.toString(),topics:t.topics.map(i=>i===null?i:Array.isArray(i)?i.map(r=>r.toString()):i.toString())})}catch(i){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIEvent.parseLog","Decoding failed: Data must be a valid hex string encoding a compliant ABI type.",{data:{abi:e,data:t.data,topics:t.topics}},i)}}decodeEventLog(e){try{return n.parseLog([this.abiEvent],e)}catch(t){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIEvent.decodeEventLog","Decoding failed: Data must be a valid hex string encoding a compliant ABI type.",{data:e},t)}}decodeEventLogAsArray(e){let t=this.decodeEventLog(e);return t.args===void 0?[]:this.parseObjectValues(t.args)}encodeEventLog(e){try{let t=this.encodeFilterTopics(e),i=[],r=[];return this.abiEvent.inputs.forEach((a,o)=>{if(a.indexed??!1)return;let u=e[o];i.push(a),r.push(u);}),{data:b.of(i,r).toHex(),topics:t.map(a=>a===null?a:Array.isArray(a)?a.map(o=>s.of(o)):s.of(a))}}catch(t){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIEvent.encodeEventLog","Encoding failed: Data format is invalid. Event data must be correctly formatted for ABI-compliant encoding.",{dataToEncode:e},t)}}encodeFilterTopics(e){let t=Array.isArray(e)?e.length:Object.values(e??{}).length;if(this.abiEvent.inputs.length<t)throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIEvent.encodeEventLog","Encoding failed: Data format is invalid. Number of values to encode is greater than the inputs.",{valuesToEncode:e});try{return viem.encodeEventTopics({abi:[this.abiEvent],args:e})}catch(i){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIEvent.encodeEventLog","Encoding failed: Data format is invalid. Event topics values must be correctly formatted for ABI-compliant encoding.",{valuesToEncode:e},i)}}encodeFilterTopicsNoNull(e){return this.encodeFilterTopics(e).map(i=>i===null?void 0:i)}};var E=class extends N{abiFunction;constructor(e){try{super(e),this.abiFunction=this.signature;}catch(t){throw new sdkErrors.InvalidAbiItem("ABIFunction constructor","Initialization failed: Cannot create Function ABI. Function format is invalid.",{type:"function",value:e},t)}}get signatureHash(){return super.signatureHash.substring(0,10)}decodeData(e){try{return viem.decodeFunctionData({abi:[this.abiFunction],data:e.toString()})}catch(t){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIFunction.decodeData","Decoding failed: Data must be a valid hex string encoding a compliant ABI type.",{data:e},t)}}encodeData(e){try{return s.of(viem.encodeFunctionData({abi:[this.abiFunction],args:e}))}catch(t){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIFunction.encodeData","Encoding failed: Data format is invalid. Function data does not match the expected format for ABI type encoding.",{dataToEncode:e},t)}}decodeResult(e){try{return viem.decodeFunctionResult({abi:[this.abiFunction],data:e.toString()})}catch(t){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIFunction.decodeResult","Decoding failed: Data must be a valid hex string encoding a compliant ABI type.",{data:e},t)}}decodeOutputAsArray(e){let t=this.decodeResult(e);return this.abiFunction.outputs.length>1?this.parseObjectValues(t):this.abiFunction.outputs.length===1&&this.abiFunction.outputs[0].type==="tuple"?[this.parseObjectValues(t)]:[t]}};var B=class n extends b{constructor(t){super();this.abi=t;this.viemABI=t;}viemABI;static ofAbi(t){return new n(t)}getFunction(t){let i=viem.getAbiItem({abi:this.viemABI,name:t});if(i==null)throw new sdkErrors.InvalidAbiItem("ABIContract.getFunction()",`Function '${t}' not found in contract ABI.`,{type:"function",value:t});return new E(i)}getEvent(t){let i=viem.getAbiItem({abi:this.viemABI,name:t});if(i==null)throw new sdkErrors.InvalidAbiItem("ABIContract.getEvent()",`Function '${t}' not found in contract ABI.`,{type:"event",value:t});return new A(i)}encodeFunctionInput(t,i){try{let r=viem.getAbiItem({abi:this.viemABI,name:t});return new E(r).encodeData(i)}catch(r){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIContract.encodeFunctionInput()","Encoding failed: Data format is invalid. Function data does not match the expected format for ABI type encoding.",{functionName:t,functionData:i},r)}}decodeFunctionInput(t,i){try{let r=viem.getAbiItem({abi:this.viemABI,name:t});return new E(r).decodeData(i)}catch(r){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIContract.decodeFunctionInput()","Decoding failed: Data must be a valid hex string encoding a compliant ABI type.",{functionName:t,encodedFunctionInput:i},r)}}decodeFunctionOutput(t,i){try{let r=viem.getAbiItem({abi:this.viemABI,name:t});return new E(r).decodeResult(i)}catch(r){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIContract.decodeFunctionOutput()","Decoding failed: Data must be a valid hex string encoding a compliant ABI type.",{functionName:t,encodedFunctionOutput:i},r)}}encodeEventLog(t,i){try{let r=viem.getAbiItem({abi:this.viemABI,name:t});return new A(r).encodeEventLog(i)}catch(r){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIContract.encodeEventLog()","Encoding failed: Data format is invalid. Event data does not match the expected format for ABI type encoding.",{eventName:t,dataToEncode:i},r)}}decodeEventLog(t,i){try{let r=viem.getAbiItem({abi:this.viemABI,name:t});return new A(r).decodeEventLog(i)}catch(r){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIContract.encodeEventLog()","Encoding failed: Data format is invalid. Event data does not match the expected format for ABI type encoding.",{eventName:t,dataToDecode:i},r)}}parseLog(t,i){try{return A.parseLog(this.abi,{data:t,topics:i})}catch(r){throw new sdkErrors.InvalidAbiDataToEncodeOrDecode("ABIContract.parseLog()","Decoding failed: Data must be a valid hex string encoding a compliant ABI type.",{data:t,topics:i},r)}}parseLogAsArray(t,i){let r=this.parseLog(t,i);return r.args===void 0?[]:this.parseObjectValues(r.args)}};var be=class{address;balance;transactions;type;constructor(e,t,i="EOA",r){this.address=e,this.balance=t,this.type=i,this.transactions=r??[];}get bi(){throw new sdkErrors.InvalidOperation("Account.bi","There is no big integer representation for an account.",{data:""})}get bytes(){throw new sdkErrors.InvalidOperation("Account.bytes","There is no bytes representation for an account.",{data:""})}get n(){throw new sdkErrors.InvalidOperation("Account.n","There is no number representation for an account.",{data:""})}addTransaction(e){this.transactions.push(e);}compareTo(e){let t=this.type.localeCompare(e.type);if(t===0){let i=this.address.compareTo(e.address);if(i===0){let r=this.balance.code.compareTo(e.balance.code);return r===0?this.balance.value.compareTo(e.balance.value):r}return i}return t}isEqual(e){return this.compareTo(e)===0}toString(){return `${this.type} Address: ${this.address.toString()} Balance: ${this.balance.value} ${this.balance.code}`}};var w=class n extends s{get n(){let e=this.bi;if(Number.MIN_SAFE_INTEGER<=e&&e<=Number.MAX_SAFE_INTEGER)return Number(e);throw new sdkErrors.InvalidDataType("HexInt.n","not in the safe number range",{bi:`${e}`,hex:this.toString()})}static of(e){try{if(e instanceof s)return new n(e.sign,e.digits);if(typeof e=="number"){if(Number.isInteger(e)){let i=s.of(BigInt(e));return new n(i.sign,i.digits)}throw new sdkErrors.InvalidDataType("HexInt.of","not an integer",{exp:e})}let t=s.of(e);return new n(t.sign,t.digits)}catch(t){throw new sdkErrors.InvalidDataType("HexInt.of","not an hexadecimal integer expression",{exp:`${e}`,e:t})}}};var c=class n extends w{static REGEX_HEXUINT=/^(0x)?[0-9a-f]*$/i;static REGEX_HEXUINT_PREFIX=/^0x/i;static isValid(e){return n.REGEX_HEXUINT.test(e)}static isValid0x(e){return n.REGEX_HEX_PREFIX.test(e)&&s.isValid(e)}static of(e){try{let t=w.of(e);if(t.sign>=s.POSITIVE)return new n(t.sign,t.digits);throw new sdkErrors.InvalidDataType("HexUInt.of","not positive",{exp:`${e}`})}catch(t){throw new sdkErrors.InvalidDataType("HexUInt.of","not a hexadecimal positive integer expression",{exp:`${e}`,e:t},t)}}};var v=class n extends c{static of(e){try{let t=sha3.keccak_256(c.of(e).bytes);return new n(s.POSITIVE,c.of(t).digits)}catch(t){throw new sdkErrors.InvalidOperation("Keccak256.of","hash error",{exp:`${e}`,e:t})}}};var p=class n extends String{static DECODER=new TextDecoder;static NFC="NFC";static ENCODER=new TextEncoder;constructor(e){super(e.normalize(n.NFC));}get bi(){try{return BigInt(this.toString())}catch(e){throw new sdkErrors.InvalidOperation("Txt.bi()","Can't cast to big integer",{txt:this.toString()},e)}}get bytes(){return n.ENCODER.encode(this.toString())}get n(){return Number(this.toString())}compareTo(e){return this.toString().localeCompare(e.toString())}isEqual(e){return this.compareTo(e)===0}toString(){return this.valueOf()}static of(e){return typeof e=="string"?new n(e):typeof e=="bigint"||typeof e=="number"?new n(e.toString()):new n(n.DECODER.decode(e))}};var l=class n{static BASE=10n;static DEFAULT_FRACTIONAL_DECIMALS=20n;static NaN=new n(0n,0n,NaN);static NEGATIVE_INFINITY=new n(0n,0n,Number.NEGATIVE_INFINITY);static ONE=n.of(1n);static POSITIVE_INFINITY=new n(0n,0n,Number.POSITIVE_INFINITY);static REGEX_INTEGER=/^[-+]?\d+$/;static REGEX_NUMBER=/(^[-+]?\d+(\.\d+)?)$|(^[-+]?\.\d+)$/;static REGEX_NATURAL=/^\d+$/;static ZERO=new n(0n,0n,0);edgeFlag;fractionalDigits;scaledValue;get bi(){if(this.isFinite())return this.scaledValue/n.BASE**this.fractionalDigits;throw new sdkErrors.InvalidOperation("FixedPointNumber.bi","not finite value cannot cast to big integer",{this:this.toString()})}get bytes(){return p.of(this.toString()).bytes}get n(){return this.isNaN()?Number.NaN:this.isNegativeInfinite()?Number.NEGATIVE_INFINITY:this.isPositiveInfinite()?Number.POSITIVE_INFINITY:this.isZero()?0:Number(this.scaledValue)*10**-Number(this.fractionalDigits)}constructor(e,t,i=0){this.fractionalDigits=e,this.edgeFlag=i,this.scaledValue=t;}abs(){return this.isNaN()?n.NaN:this.isNegativeInfinite()?n.POSITIVE_INFINITY:new n(this.fractionalDigits,this.scaledValue<0n?-this.scaledValue:this.scaledValue,this.edgeFlag)}compareTo(e){if(this.isNaN()||e.isNaN())throw new sdkErrors.InvalidOperation("FixedPointNumber.compareTo","compare between NaN",{this:`${this}`,that:`${e}`});if(this.isNegativeInfinite())return e.isNegativeInfinite()?0:-1;if(this.isPositiveInfinite())return e.isPositiveInfinite()?0:1;if(e.isNegativeInfinite())return 1;if(e.isPositiveInfinite())return -1;let t=this.maxFractionalDigits(e,this.fractionalDigits),i=this.dp(t).scaledValue-e.dp(t).scaledValue;return i<0n?-1:i===0n?0:1}comparedTo(e){try{return this.compareTo(e)}catch{return null}}div(e){if(this.isNaN()||e.isNaN())return n.NaN;if(this.isNegativeInfinite())return e.isInfinite()?n.NaN:e.isPositive()?n.NEGATIVE_INFINITY:n.POSITIVE_INFINITY;if(this.isPositiveInfinite())return e.isInfinite()?n.NaN:e.isPositive()?n.POSITIVE_INFINITY:n.NEGATIVE_INFINITY;if(e.isInfinite())return n.ZERO;if(e.isZero())return this.isZero()?n.NaN:this.isNegative()?n.NEGATIVE_INFINITY:n.POSITIVE_INFINITY;let t=this.maxFractionalDigits(e,this.fractionalDigits);return new n(t,n.div(t,this.dp(t).scaledValue,e.dp(t).scaledValue)).dp(this.fractionalDigits)}static div(e,t,i){return n.BASE**e*t/i}dp(e){let t=BigInt(e);if(t>=0){let i=this.fractionalDigits,r=this.scaledValue;if(t>i)r*=n.BASE**(t-i),i=t;else for(;i>t&&r%n.BASE===0n;)i--,r/=n.BASE;return new n(i,r,this.edgeFlag)}throw new sdkErrors.InvalidDataType("FixedPointNumber.scale","negative `dp` arg",{dp:`${t}`})}eq(e){return this.comparedTo(e)===0}gt(e){let t=this.comparedTo(e);return t!==null&&t>0}gte(e){let t=this.comparedTo(e);return t!==null&&t>=0}idiv(e){if(this.isNaN()||e.isNaN())return n.NaN;if(this.isNegativeInfinite())return e.isInfinite()?n.NaN:e.isPositive()?n.NEGATIVE_INFINITY:n.POSITIVE_INFINITY;if(this.isPositiveInfinite())return e.isInfinite()?n.NaN:e.isPositive()?n.POSITIVE_INFINITY:n.NEGATIVE_INFINITY;if(e.isInfinite())return n.ZERO;if(e.isZero())return this.isZero()?n.NaN:this.isNegative()?n.NEGATIVE_INFINITY:n.POSITIVE_INFINITY;let t=this.maxFractionalDigits(e,this.fractionalDigits);return new n(t,n.idiv(t,this.dp(t).scaledValue,e.dp(t).scaledValue)).dp(this.fractionalDigits)}static idiv(e,t,i){return t/i*n.BASE**e}isEqual(e){return this.eq(e)}isFinite(){return this.edgeFlag===0}isInfinite(){return this.isNegativeInfinite()||this.isPositiveInfinite()}isInteger(){return this.isFinite()?this.scaledValue%n.BASE**this.fractionalDigits===0n:!1}static isIntegerExpression(e){return this.REGEX_INTEGER.test(e)}isNaN(){return Number.isNaN(this.edgeFlag)}static isNaturalExpression(e){return this.REGEX_NATURAL.test(e)}isNegative(){return this.isFinite()&&this.scaledValue<0n||this.isNegativeInfinite()}isNegativeInfinite(){return this.edgeFlag===Number.NEGATIVE_INFINITY}static isNumberExpression(e){return n.REGEX_NUMBER.test(e)}isPositive(){return this.isFinite()&&this.scaledValue>=0n||this.isPositiveInfinite()}isPositiveInfinite(){return this.edgeFlag===Number.POSITIVE_INFINITY}isZero(){return this.isFinite()&&this.scaledValue===0n}lt(e){let t=this.comparedTo(e);return t!==null&&t<0}lte(e){let t=this.comparedTo(e);return t!==null&&t<=0}maxFractionalDigits(e,t=n.DEFAULT_FRACTIONAL_DECIMALS){let i=this.fractionalDigits<e.fractionalDigits?e.fractionalDigits:this.fractionalDigits;return i>t?i:t}minus(e){if(this.isNaN()||e.isNaN())return n.NaN;if(this.isNegativeInfinite())return e.isNegativeInfinite()?n.NaN:n.NEGATIVE_INFINITY;if(this.isPositiveInfinite())return e.isPositiveInfinite()?n.NaN:n.POSITIVE_INFINITY;let t=this.maxFractionalDigits(e,this.fractionalDigits);return new n(t,this.dp(t).scaledValue-e.dp(t).scaledValue).dp(this.fractionalDigits)}modulo(e){if(this.isNaN()||e.isNaN()||this.isInfinite()||e.isInfinite()||e.isZero())return n.NaN;let t=this.maxFractionalDigits(e,this.fractionalDigits),i=this.abs().dp(t).scaledValue,r=e.abs().dp(t).scaledValue;for(;i>=r;)i-=r;return new n(t,i).dp(this.fractionalDigits)}static mul(e,t,i){return e*t/n.BASE**i}negated(){return this.isNegativeInfinite()?n.POSITIVE_INFINITY:this.isPositiveInfinite()?n.NEGATIVE_INFINITY:new n(this.fractionalDigits,-this.scaledValue,this.edgeFlag)}static of(e,t=this.DEFAULT_FRACTIONAL_DECIMALS){try{return e instanceof n?new n(e.fractionalDigits,e.scaledValue,e.edgeFlag):Number.isNaN(e)?new n(t,0n,Number.NaN):e===Number.NEGATIVE_INFINITY?new n(t,-1n,Number.NEGATIVE_INFINITY):e===Number.POSITIVE_INFINITY?new n(t,1n,Number.POSITIVE_INFINITY):new n(t,this.txtToSV(e.toString(),t))}catch(i){throw new sdkErrors.InvalidDataType("FixedPointNumber.of","not a number",{exp:e},i)}}plus(e){if(this.isNaN()||e.isNaN())return n.NaN;if(this.isNegativeInfinite())return e.isPositiveInfinite()?n.NaN:n.NEGATIVE_INFINITY;if(this.isPositiveInfinite())return e.isNegativeInfinite()?n.NaN:n.POSITIVE_INFINITY;let t=this.maxFractionalDigits(e,this.fractionalDigits);return new n(t,this.dp(t).scaledValue+e.dp(t).scaledValue).dp(this.fractionalDigits)}pow(e){if(this.isNaN()||e.isNaN())return n.NaN;if(this.isInfinite())return e.isZero()?n.ONE:e.isNegative()?n.ZERO:n.POSITIVE_INFINITY;if(e.isNegativeInfinite())return n.ZERO;if(e.isPositiveInfinite())return n.POSITIVE_INFINITY;if(e.isZero())return n.ONE;let t=e.abs().bi,i=n.of(this),r=n.ONE;for(;t>0n;)t%2n===1n&&(r=r.times(i)),i=i.times(i),t=t/2n;return e.isNegative()?n.ONE.div(r):r}static sqr(e,t){if(e<0n)throw new RangeError("Value must be positive");let i=t*n.BASE,r=0,a=e,o=0n;for(;a!==o&&r<i;)o=a,a=(a+n.div(t,e,a))/2n,r++;return a}sqrt(){if(this.isNaN()||this.isNegativeInfinite())return n.NaN;if(this.isPositiveInfinite())return n.POSITIVE_INFINITY;try{return new n(this.fractionalDigits,n.sqr(this.scaledValue,this.fractionalDigits))}catch{return n.NaN}}times(e){if(this.isNaN()||e.isNaN())return n.NaN;if(this.isNegativeInfinite())return e.isNegative()?n.POSITIVE_INFINITY:n.NEGATIVE_INFINITY;if(this.isPositiveInfinite())return e.isNegative()?n.NEGATIVE_INFINITY:n.POSITIVE_INFINITY;let t=this.fractionalDigits>e.fractionalDigits?this.fractionalDigits:e.fractionalDigits;return new n(t,n.mul(this.dp(t).scaledValue,e.dp(t).scaledValue,t)).dp(this.fractionalDigits)}toString(e="."){if(this.edgeFlag===0){let t=this.scaledValue<0n?"-":"",r=(this.scaledValue<0n?(-this.scaledValue).toString():this.scaledValue.toString()).padStart(Number(this.fractionalDigits),"0"),a=this.fractionalDigits>0?r.slice(Number(-this.fractionalDigits)):"",o=r.slice(0,r.length-a.length),u=o.length<1?"0":o,I=n.trimEnd(a);return t+u+(I.length>0?e+I:"")}return this.edgeFlag.toString()}static trimEnd(e,t="0"){return e.endsWith(t)?n.trimEnd(e.substring(0,e.length-t.length),t):e}static txtToSV(e,t,i="."){let r=e.charAt(0),a=1n;r==="-"?(a=-1n,e=e.substring(1)):r==="+"&&(e=e.substring(1));let o=n.BASE**t,u=e.lastIndexOf(i);if(u<0)return a*o*BigInt(e);let I=e.substring(0,u),qe=e.substring(u+1);return a*o*BigInt(I)+a*(o*BigInt(qe))/BigInt(10**qe.length)}};var x=class n extends c{static of(e){try{let t=st__namespace.sha256(c.of(e).bytes);return new n(s.POSITIVE,c.of(t).digits)}catch(t){throw new sdkErrors.InvalidOperation("Sha256.of","hash error",{exp:`${e}`,e:t})}}};var d=class n{static COMPRESSED_PREFIX=2;static SIGNATURE_LENGTH=65;static UNCOMPRESS_PREFIX=4;static VALID_HASH_LENGTH=32;static compressPublicKey(e){if(e.at(0)===n.UNCOMPRESS_PREFIX){let i=e.slice(1,33),r=e.slice(33,65),a=r[r.length-1]&1;return T__namespace.concatBytes(Uint8Array.of(n.COMPRESSED_PREFIX+a),i)}else return e}static derivePublicKey(e,t=!0){if(n.isValidPrivateKey(e))return secp256k1.secp256k1.getPublicKey(e,t);throw new sdkErrors.InvalidSecp256k1PrivateKey("Secp256k1.derivePublicKey","Invalid private key given as input. Ensure it is a valid 32-byte secp256k1 private key.",void 0)}static async generatePrivateKey(){try{return secp256k1.secp256k1.utils.randomPrivateKey()}catch{let t=await global.crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),i=await global.crypto.subtle.exportKey("raw",t);return new Uint8Array(i)}}static inflatePublicKey(e){if(e.at(0)!==n.UNCOMPRESS_PREFIX){let i=e.slice(0,33);return secp256k1.secp256k1.ProjectivePoint.fromAffine(secp256k1.secp256k1.ProjectivePoint.fromHex(c.of(i).digits).toAffine()).toRawBytes(!1)}else return e}static isValidMessageHash(e){return e.length===n.VALID_HASH_LENGTH}static isValidPrivateKey(e){return secp256k1.secp256k1.utils.isValidPrivateKey(e)}static randomBytes(e){try{return Je.randomBytes(e)}catch{return global.crypto.getRandomValues(new Uint8Array(e??32))}}static recover(e,t){if(!n.isValidMessageHash(e))throw new sdkErrors.InvalidSecp256k1MessageHash("Secp256k1.recover","Invalid message hash given as input. Ensure it is a valid 32-byte message hash.",{messageHash:e});if(t.length!==n.SIGNATURE_LENGTH)throw new sdkErrors.InvalidSecp256k1Signature("Secp256k1.recover","Invalid signature given as input. Length must be exactly 65 bytes.",{signature:t});let i=t[64];if(i!==0&&i!==1)throw new sdkErrors.InvalidSecp256k1Signature("Secp256k1.recover","Invalid signature recovery value. Signature bytes at position 64 must be 0 or 1.",{signature:t,recovery:i});return secp256k1.secp256k1.Signature.fromCompact(t.slice(0,64)).addRecoveryBit(i).recoverPublicKey(e).toRawBytes(!1)}static sign(e,t){if(!n.isValidMessageHash(e))throw new sdkErrors.InvalidSecp256k1MessageHash("Secp256k1.sign","Invalid message hash given as input. Ensure it is a valid 32-byte message hash.",{messageHash:e});if(!n.isValidPrivateKey(t))throw new sdkErrors.InvalidSecp256k1PrivateKey("Secp256k1.sign","Invalid private key given as input. Ensure it is a valid 32-byte secp256k1 private key.",void 0);let i=secp256k1.secp256k1.sign(e,t);return T__namespace.concatBytes(T__namespace.numberToBytesBE(i.r,32),T__namespace.numberToBytesBE(i.s,32),T__namespace.numberToVarBytesBE(i.recovery))}};var O=class extends z__namespace.HDKey{static EXTENDED_PRIVATE_KEY_PREFIX=c.of("0488ade4000000000000000000").bytes;static EXTENDED_PUBLIC_KEY_PREFIX=c.of("0488b21e000000000000000000").bytes;static VET_DERIVATION_PATH="m/44'/818'/0'/0";static fromMnemonic(e,t=this.VET_DERIVATION_PATH){let i;try{i=z__namespace.HDKey.fromMasterSeed(lt__namespace.mnemonicToSeedSync(e.join(" ").toLowerCase()));}catch(r){throw new sdkErrors.InvalidHDKeyMnemonic("HDNode.fromMnemonic","Invalid mnemonic words given as input.",void 0,r)}try{return i.derive(t)}catch(r){throw new sdkErrors.InvalidHDKey("HDNode.fromMnemonic","Invalid derivation path given as input.",{derivationPath:t},r)}}static fromPrivateKey(e,t){if(e.length===32){let i=T__namespace.concatBytes(this.EXTENDED_PRIVATE_KEY_PREFIX,t,Uint8Array.of(0),e);e.fill(0);let r=x.of(x.of(i).bytes).bytes.subarray(0,4),a=T__namespace.concatBytes(i,r);try{return z__namespace.HDKey.fromExtendedKey(base.base58.encode(a))}catch{throw new sdkErrors.InvalidSecp256k1PrivateKey("HDNode.fromPrivateKey","Invalid private key path given as input.",void 0)}}throw e.fill(0),new sdkErrors.InvalidSecp256k1PrivateKey("HDNode.fromPrivateKey()","Invalid private key path given as input. Length must be exactly 32 bytes.",void 0)}static fromPublicKey(e,t){if(t.length===32){let i=T__namespace.concatBytes(this.EXTENDED_PUBLIC_KEY_PREFIX,t,d.compressPublicKey(e)),r=x.of(x.of(i).bytes).bytes.subarray(0,4),a=T__namespace.concatBytes(i,r);try{return z__namespace.HDKey.fromExtendedKey(base.base58.encode(a))}catch(o){throw new sdkErrors.InvalidHDKey("HDNode.fromPublicKey()","Invalid public key path given as input.",{publicKey:e},o)}}throw new sdkErrors.InvalidHDKey("HDNode.fromPublicKey()","Invalid chain code given as input. Length must be exactly 32 bytes.",{chainCode:t})}static isDerivationPathComponentValid(e,t){return (t===0?e==="m":!1)||l.isNaturalExpression(e)||l.isNaturalExpression(e.slice(0,-1))&&e.endsWith("'")}static isDerivationPathValid(e){let t=e.split("/");for(let i=0;i<t.length;i++)if(!this.isDerivationPathComponentValid(t[i],i))return !1;return !0}};var m=class n extends c{static DIGITS=40;static checksum(e){let t=e.digits,i=v.of(p.of(t).bytes).digits,r="";for(let a=0;a<t.length;a++)r+=parseInt(i[a],16)>7?t[a].toUpperCase():t[a];return "0x"+r}static isValid(e){return s.isValid0x(e)&&e.length===n.DIGITS+2}static of(e){try{let t=c.of(e),i=c.of(t.digits.padStart(40,"0")),r=n.checksum(i);return new n(s.POSITIVE,"0x0",()=>r.substring(2))}catch(t){throw new sdkErrors.InvalidDataType("Address.of","not a valid hexadecimal positive integer expression",{exp:`${e}`},t)}}static ofPrivateKey(e,t=!0){try{return n.ofPublicKey(d.derivePublicKey(e,t))}catch(i){throw i instanceof sdkErrors.InvalidSecp256k1PrivateKey?i:new sdkErrors.InvalidDataType("Address.ofPrivateKey","not a valid private key",{privateKey:`${e}`},i)}}static ofPublicKey(e){try{let t=d.inflatePublicKey(e),i=v.of(t.slice(1)).bytes;return n.of(i.slice(12))}catch(t){throw new sdkErrors.InvalidDataType("Address.ofPublicKey","not a valid public key",{publicKey:`${e}`},t)}}static ofMnemonic(e,t="m/0"){let i=O.fromMnemonic(e);try{return n.ofPublicKey(i.derive(t).publicKey)}catch(r){throw new sdkErrors.InvalidHDKey("mnemonic.deriveAddress()","Invalid derivation path given as input.",{derivationPath:t},r)}}};var Te=class n extends c{static DIGITS=16;constructor(e){super(s.POSITIVE,e.fit(n.DIGITS).digits);}static isValid(e){return s.isValid(e)&&c.REGEX_HEXUINT_PREFIX.test(e)?e.length===n.DIGITS+2:e.length===n.DIGITS}static isValid0x(e){return c.REGEX_HEXUINT_PREFIX.test(e)&&n.isValid(e)}static of(e){try{return e instanceof c?new n(e):new n(c.of(e))}catch(t){throw new sdkErrors.InvalidDataType("BlockRef.of","not a BlockRef expression",{exp:`${e}`},t)}}};var g=class n extends c{static of(e){try{let t=blake2b.blake2b.create({dkLen:32}).update(c.of(e).bytes).digest();return new n(s.POSITIVE,c.of(t).digits)}catch(t){throw new sdkErrors.InvalidOperation("Blake2b256.of","hash error",{exp:`${e}`,e:t})}}};var J=class n{bytes;k;constructor(e,t){this.bytes=e,this.k=t;}get bi(){return T__namespace.bytesToNumberBE(this.bytes)}get n(){let e=this.bi;if(Number.MIN_SAFE_INTEGER<=e&&e<=Number.MAX_SAFE_INTEGER)return Number(e);throw new sdkErrors.InvalidDataType("BloomFilter.n","not in the safe number range",{bytes:this.bytes,k:this.k})}compareTo(e){return this.bi<e.bi?-1:this.bi>e.bi?1:this.k-e.k}isEqual(e){return this.bi===e.bi&&this.k===e.k}contains(e){return ft(yt(e instanceof s?e.bytes:e),this.k,this.bytes.byteLength*8,(t,i)=>(this.bytes[t]&i)===i)}static computeBestBitsPerKey(e){return e<=1?2:e>=30?44:Math.ceil(e/.69)}static computeBestHashFunctionsQuantity(e){let t=Math.floor(e*.69);return t<1?1:t>30?30:t}isJoinable(e){return this.k===e.k&&this.bytes.length===e.bytes.length}join(e){if(this.k!==e.k)throw new sdkErrors.InvalidOperation("BloomFilter.join","different k values",{this:this,other:e});if(this.bytes.length!==e.bytes.length)throw new sdkErrors.InvalidOperation("BloomFilter.join","different length values",{this:this,other:e});let t=new Uint8Array(this.bytes.length);for(let i=0;i<this.bytes.length;i++)t[i]=this.bytes[i]|e.bytes[i];return new n(t,this.k)}static of(...e){let t=new Ae;return t.add(...e),t}},Ae=class n{static DEFAULT_K=5;hashMap=new Map;add(...e){for(let t of e)this.hashMap.set(yt(t instanceof s?t.bytes:t),!0);return this}build(e=n.DEFAULT_K,t=J.computeBestBitsPerKey(e)){let i=Math.floor((this.hashMap.size*t+7)/8);i=i<8?8:i;let r=new Uint8Array(i),a=i*8;for(let o of this.hashMap.keys())ft(o,e,a,(u,I)=>(r[u]|=I,!0));return new J(r,e)}},an=2**32;function sn(n,e){return (n+e)%an}function ft(n,e,t,i){let r=(n>>>17|n<<15)>>>0;for(let a=0;a<e;a++){let o=n%t;if(!i(Math.floor(o/8),1<<o%8))return !1;n=sn(n,r);}return !0}function yt(n){return Number(T__namespace.bytesToNumberBE(g.of(n).bytes.slice(0,4)))}var L=class{_code;_value;constructor(e,t){this._code=e,this._value=t;}get code(){return this._code}get value(){return this._value}get bi(){return this._value.bi}get bytes(){return p.of(this.toString()).bytes}get n(){return this._value.n}compareTo(e){if(this.code.isEqual(e.code))return this.value.compareTo(e.value);throw new sdkErrors.InvalidDataType("Coin.compareTo","not VET currency",{that:`${e}`})}isEqual(e){try{return this.compareTo(e)===0}catch{return !1}}toString(){return `${this.value.toString()} ${this._code}`}};exports.Units=(u=>(u[u.wei=0]="wei",u[u.kwei=3]="kwei",u[u.mwei=6]="mwei",u[u.gwei=9]="gwei",u[u.szabo=12]="szabo",u[u.finney=15]="finney",u[u.ether=18]="ether",u))(exports.Units||{});(r=>{function n(a){return e(a,18)}r.formatEther=n;function e(a,o=18){let u=a.div(l.of(10n**BigInt(o)));return u.isInteger()?`${u}.0`:`${u}`}r.formatUnits=e;function t(a){return i(a,18)}r.parseEther=t;function i(a,o=18){return l.of(a).times(l.of(10n**BigInt(o)))}r.parseUnits=i;})(exports.Units||={});var Q=class n extends L{static CODE=p.of("\u{1D54D}\u039ET");static WEI_FD=18n;wei=this.value.dp(n.WEI_FD).scaledValue;constructor(e){super(n.CODE,e);}static of(e,t=18){let i=e instanceof l?e:l.of(e);return new n(i.div(l.of(10n**(n.WEI_FD-BigInt(t)))))}};var X=class n extends L{static CODE=p.of("\u{1D54D}THO");static WEI_FD=18n;wei=this.value.dp(n.WEI_FD).scaledValue;constructor(e){super(n.CODE,e);}static of(e,t=18){let i=e instanceof l?e:l.of(e);return new n(i.div(l.of(10n**(n.WEI_FD-BigInt(t)))))}};var f=class{};var C=class n{encoded;decoded;constructor(e){this.decoded=ArrayBuffer.isView(e)?rlp.RLP.decode(e):e,this.encoded=ArrayBuffer.isView(e)?e:rlp.RLP.encode(e);}get bi(){return utils.bytesToNumberBE(this.bytes)}get bytes(){return this.encoded}get n(){let e=this.bi;if(e<=Number.MAX_SAFE_INTEGER)return Number(e);throw new sdkErrors.InvalidDataType("RLP.n","not in the safe number range",{bytes:this.bytes})}compareTo(e){if(this.encoded.length!==e.encoded.length)return -1;for(let t=0;t<this.encoded.length;t++)if(this.encoded[t]!==e.encoded[t])return 1;return 0}isEqual(e){return this.compareTo(e)===0}toHex(){return s.of(this.bytes)}static of(e){try{return new n(e)}catch(t){throw new sdkErrors.InvalidRLP("RLP.of()",`Error when creating an RLP instance for data ${e}`,{context:"This method creates an RLP instance from a plain value.",data:{data:e}},t)}}static ofEncoded(e){try{return new n(e)}catch(t){throw new sdkErrors.InvalidRLP("RLP.ofEncoded()","Error when creating an RLP instance for encoded data.",{context:"This method creates an RLP instance from an encoded value.",data:{encodedData:e}},t)}}static packData(e,t,i){i=i!==""?i+"."+t.name:t.name;let r=t.kind;if(r instanceof f)return r.data(e,i).encode();if(Array.isArray(r))return r.map(a=>this.packData(e[a.name],a,i));if(!Array.isArray(e))throw new sdkErrors.InvalidRLP("RLP.packData()",`Validation error: Expected an array in ${i}.`,{context:i,data:{obj:e,profile:t}});if("item"in r&&Array.isArray(e)){let a=r.item;return e.map((o,u)=>this.packData(o,{name:"#"+u,kind:a},i))}}static unpackData(e,t,i){i=i!==""?i+"."+t.name:t.name;let r=t.kind;if(r instanceof f){if(!ArrayBuffer.isView(e))throw new sdkErrors.InvalidRLP("RLP.unpackData()","Unpacking error: Expected data type is Uint8Array.",{context:i,data:{packed:e,profile:t}});return r.buffer(e,i).decode()}if(Array.isArray(r)&&Array.isArray(e)){let a=e;if(r.length!==a.length)throw new sdkErrors.InvalidRLP("RLP.unpackData()",`Unpacking error: Expected ${r.length} items, but got ${a.length}.`,{context:i,data:{packed:e,profile:t}});return r.reduce((o,u,I)=>(o[u.name]=this.unpackData(a[I],u,i),o),{})}if(!Array.isArray(e))throw new sdkErrors.InvalidRLP("RLP.unpackData()",`Validation error: Expected an array in ${i}.`,{context:i,data:{packed:e,profile:t}});if("item"in r&&Array.isArray(e)){let a=r.item;return e.map((o,u)=>this.unpackData(o,{name:"#"+u,kind:a},i))}}};var R=class n extends C{constructor(t,i){super(t);this.profile=i;}static ofObject(t,i){let r=this.packData(t,i,"");return new n(r,i)}static ofObjectEncoded(t,i){let r=C.ofEncoded(t).decoded;return new n(r,i)}get object(){return n.unpackData(this.decoded,this.profile,"")}};var ve=(n,e)=>{if(typeof n!="number"&&typeof n!="string")throw new sdkErrors.InvalidRLP("validateNumericKindData()",`Validation error: Input in ${e} must be a string or number.`,{context:e,data:{data:n}});return typeof n=="number"?dn(n,e):typeof n=="string"&&pn(n,e),BigInt(n)},dn=(n,e)=>{if(!Number.isSafeInteger(n)||n<0)throw new sdkErrors.InvalidRLP("_validateNumericKindNumber()",`Validation error: Number in ${e} must be a safe and non-negative integer.`,{context:e,data:{num:n}})},pn=(n,e)=>{let t=c.isValid0x(n),i=l.isNaturalExpression(n);if(!t&&!i)throw new sdkErrors.InvalidRLP("_validateNumericKindString()",`Validation error: String in ${e} must represent a non-negative integer in hex or decimal format.`,{context:e,data:{str:n}});if(t&&n.length<=2)throw new sdkErrors.InvalidRLP("_validateNumericKindString()",`Validation error: Hex string number in ${e} must be of valid length.`,{context:e,data:{str:n}})},Ne=(n,e,t)=>{if(t!==void 0&&n.length>t)throw new sdkErrors.InvalidRLP("assertValidNumericKindBuffer()",`Validation error: Buffer in ${e} must be less than ${t} bytes.`,{context:e,data:{buf:n,maxBytes:t}});if(n[0]===0)throw new sdkErrors.InvalidRLP("assertValidNumericKindBuffer()",`Validation error: Buffer in ${e} must represent a canonical integer (no leading zeros).`,{context:e,data:{buf:n,maxBytes:t}})},we=(n,e,t)=>{if(n===0n)return Uint8Array.from([]);let i=s.of(n).digits;if(e!==void 0&&i.length>e*2)throw new sdkErrors.InvalidRLP("encodeBigIntToBuffer()",`Validation error: Encoded number in ${t} must fit within ${e} bytes.`,{context:t,data:{hex:i,maxBytes:e}});return s.of(i).bytes},xe=n=>{if(n.length===0)return 0;let e=s.of(n).bi,t=Number(e);return Number.isSafeInteger(t)?t:"0x"+e.toString(16)};var Re=(n,e)=>{if(typeof n!="string")throw new sdkErrors.InvalidRLP("assertValidHexBlobKindData()","Validation error: Input must be a string.",{context:e,data:{data:n}});if(!s.isValid(n))throw new sdkErrors.InvalidRLP("assertValidHexBlobKindData()","Validation error: Input must be a valid hex string with a '0x' prefix.",{context:e,data:{data:n}});if(n.length%2!==0)throw new sdkErrors.InvalidRLP("assertValidHexBlobKindData()","Validation error: Hex string must have an even length.",{context:e,data:{data:n}})};var Fe=(n,e,t)=>{if(n.length!==t*2+2)throw new sdkErrors.InvalidRLP("assertFixedHexBlobKindData()",`Validation error: Hex string in ${e} must be exactly ${t} bytes in length.`,{context:e,data:{data:n,bytes:t}})},Se=(n,e,t)=>{if(n.length!==t)throw new sdkErrors.InvalidRLP("assertFixedHexBlobKindData()",`Validation error: Hex string in ${e} must be exactly ${t} bytes in length.`,{context:e,data:{buffer:n,bytes:t}})};var De=(n,e,t)=>{if(n.length>t)throw new sdkErrors.InvalidRLP("assertCompactFixedHexBlobBuffer()",`Validation error: Buffer in ${e} must be at most ${t} bytes.`,{context:e,data:{buffer:n,bytes:t}});if(n.length!==0&&n[0]===0)throw new sdkErrors.InvalidRLP("assertCompactFixedHexBlobBuffer()",`Validation error: Buffer in ${e} should not have leading zero bytes.`,{context:e,data:{buffer:n,bytes:t}})},Be=n=>{let e=n.findIndex(t=>t!==0);return e!==-1?n.subarray(e):Uint8Array.from([])},ln=(n,e)=>s.of(n).fit(e*2).toString();var U=class extends f{data(e,t){if(!ArrayBuffer.isView(e))throw new sdkErrors.InvalidRLP("BufferKind.data()",`Validation error: Expected a Uint8Array type in ${t}.`,{context:t,data:{data:e}});return {encode:()=>e}}buffer(e){return {decode:()=>e}}};var h=class extends f{constructor(t){super();this.maxBytes=t;}data(t,i){let r=ve(t,i);return {encode:()=>we(r,this.maxBytes,i)}}buffer(t,i){return Ne(t,i,this.maxBytes),{decode:()=>xe(t)}}};var F=class extends f{data(e,t){return Re(e,t),{encode:()=>c.of(e.slice(2)).bytes}}buffer(e,t){return {decode:()=>s.of(e).toString()}}};var S=class extends F{constructor(t){super();this.bytes=t;}data(t,i){let r=super.data(t,i);return Fe(t,i,this.bytes),r}buffer(t,i){let r=super.buffer(t,i);return Se(t,i,this.bytes),r}};var K=class extends S{data(e,t){return e==null?{encode:()=>Uint8Array.from([])}:super.data(e,t)}buffer(e,t){return e.length===0?{decode:()=>null}:super.buffer(e,t)}};var Y=class extends S{data(e,t){let i=super.data(e,t).encode();return {encode:()=>Be(i)}}buffer(e,t){return De(e,t,this.bytes),{decode:()=>s.of(e).fit(this.bytes*2).toString()}}};var Oe=class n{static ENCODER=new TextEncoder;get bi(){throw new sdkErrors.InvalidOperation("Mnemonic.bi","There is no big integer representation for a mnemonic.",{data:""})}get bytes(){return n.ENCODER.encode(n.of().join(" "))}get n(){throw new sdkErrors.InvalidOperation("Mnemonic.n","There is no number representation for a mnemonic.",{data:""})}compareTo(e){throw new sdkErrors.InvalidOperation("Mnemonic.compareTo","There is no comparison for a mnemonic since it is not stored in memory.",{data:""})}isEqual(e){throw new sdkErrors.InvalidOperation("Mnemonic.isEqual","There is no comparison for a mnemonic since it is not stored in memory.",{data:""})}static wordsNoToStrength(e){switch(e){case 12:return 128;case 15:return 160;case 18:return 192;case 21:return 224;case 24:return 256;default:throw new sdkErrors.InvalidDataType("Mnemonic.wordsNoToStrength","not a valid number of words",{numberOfWords:e})}}static toPrivateKey(e,t="m/0"){let i=O.fromMnemonic(e);try{return i.derive(t).privateKey}catch(r){throw new sdkErrors.InvalidHDKey("mnemonic.derivePrivateKey()","Invalid derivation path given as input.",{derivationPath:t},r)}}static of(e=12,t){try{let i=n.wordsNoToStrength(e);if(t!=null){let r=i/8;return lt.entropyToMnemonic(t(r),english.wordlist).split(" ")}return lt.generateMnemonic(english.wordlist,i).split(" ")}catch(i){throw new sdkErrors.InvalidHDKeyMnemonic("Mnemonic.of","error while generating mnemonic",{wordlistSize:e},i)}}static isValid(e){let t=Array.isArray(e)?e.join(" "):e;return lt.validateMnemonic(t,english.wordlist)}};var Le=class n extends c{static of(e){try{let t=c.of(e),i=0;for(;i<t.digits.length&&t.digits.at(i)==="0";)i++;return new n(t.sign,i===t.digits.length?"0":t.digits.slice(i))}catch(t){throw new sdkErrors.InvalidDataType("Quantity.of","not a Quantity expression",{exp:`${e}`},t)}}};var He=class n extends p{static REGEX_DECIMAL_REVISION=/^(best|finalized|\d+)$/;static isValid(e){return typeof e=="number"?Number.isInteger(e)&&e>=0:c.isValid0x(e)||n.REGEX_DECIMAL_REVISION.test(e)}static of(e){try{let t;if(e instanceof s?t=e.bi.toString():typeof e=="bigint"||typeof e=="number"||typeof e=="string"?t=`${e}`:t=p.of(e).toString(),n.isValid(t))return new n(t);throw new sdkErrors.InvalidDataType("Revision.of","not a revision",{value:`${e}`})}catch(t){throw new sdkErrors.InvalidDataType("Revision.of","not a revision",{value:`${e}`,e:t})}}static BEST=n.of("best");static FINALIZED=n.of("finalized")};var ee=class n extends c{static DIGITS=64;constructor(e){super(s.POSITIVE,e.fit(n.DIGITS).digits);}static isValid(e){return s.isValid(e)&&c.REGEX_HEXUINT_PREFIX.test(e)?e.length===n.DIGITS+2:e.length===n.DIGITS}static isValid0x(e){return c.REGEX_HEXUINT_PREFIX.test(e)&&n.isValid(e)}static of(e){try{return e instanceof c?new n(e):new n(c.of(e))}catch(t){throw new sdkErrors.InvalidDataType("BlockId.of","not a BlockId expression",{exp:`${e}`},t)}}},Ce=class n extends ee{constructor(e){super(e);}static of(e){return new n(ee.of(e))}};var ke=class n{purpose;payload;domain;timestamp;signer;signature;constructor(e,t,i,r,a,o){if(Number.isSafeInteger(r)&&r>=0)if(m.isValid(a)){this.purpose=e,this.payload=t,this.domain=i,this.timestamp=r,this.signer=a.toString().toLowerCase();try{this.signature=typeof o=="string"?c.of(o).alignToBytes().toString():o;}catch(u){throw new sdkErrors.InvalidDataType("Certificate.constructor","invalid signature",{signature:o},u)}}else throw new sdkErrors.InvalidDataType("Certificate.constructor","signer is not an address",{signer:a});else throw new sdkErrors.InvalidDataType("Certificate.constructor","not positive safe integer timestamp",{timestamp:r})}static encode(e){return p.of(En__default.default(e)).bytes}encode(){return n.encode({...this,signature:void 0})}isSigned(){return typeof this.signature=="string"&&c.isValid(this.signature)}static of(e){try{return new n(e.purpose,e.payload,e.domain,e.timestamp,e.signer,e.signature)}catch(t){throw new sdkErrors.InvalidDataType("Certificate.of","invalid certificate data",{certifiable:e},t)}}sign(e){return this.signature=void 0,this.signature=c.of(d.sign(g.of(n.encode(this)).bytes,e)).toString(),this}verify(){if(!this.isSigned())throw new sdkErrors.CertificateSignatureMismatch("Certificate.verify","signature missing",{certificate:this});if(m.ofPublicKey(d.recover(g.of(n.encode({...this,signature:void 0})).bytes,c.of(this.signature).bytes)).toString().toLowerCase()!==this.signer)throw new sdkErrors.CertificateSignatureMismatch("Certificate.verify","signature doesn't match with signer's public key",{certificate:this})}};var ce={N:131072,r:8,p:1};async function wn(n,e){let t=d.derivePublicKey(n),r={address:m.ofPublicKey(t).toString(),privateKey:c.of(n).toString()},a={scrypt:{N:ce.N,r:ce.r,p:ce.p}},o=await ethers.ethers.encryptKeystoreJson(r,e,a);return JSON.parse(o)}async function xn(n,e){if(!Et(n))throw new sdkErrors.InvalidKeystore("keystore.decrypt()","Invalid keystore. Ensure the keystore is properly formatted and contains the necessary data.",{keystore:n});try{return await ethers.ethers.decryptKeystoreJson(sdkErrors.stringifyData(n),e)}catch{throw new sdkErrors.InvalidKeystoreParams("keystore.decrypt()","Decryption failed: Invalid Password for the given keystore.",{keystore:n})}}function Et(n){return ethers.ethers.isKeystoreJson(sdkErrors.stringifyData(n))}var te={encrypt:wn,decrypt:xn,isValid:Et};var Ke="aes-128-ctr",j=32,ue="scrypt",Ge=3,W={N:131072,r:8,p:1};function Rn(n){let e=T__namespace.hexToBytes(n.crypto.kdfparams.salt),t=n.crypto.kdfparams.n,i=n.crypto.kdfparams.r,r=n.crypto.kdfparams.p;if(t<=0||t&t-1)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.decodeScryptParams()","Decryption failed: invalid  keystore.crypto.kdfparams.n parameter.",{keystore:n,N:t});if(i<=0||r<=0)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.decodeScryptParams()","Decryption failed: both keystore.crypto.kdfparams.r or keystore.crypto.kdfparams.p parameter must be > 0.",{keystore:n,r:i,p:r});let a=n.crypto.kdfparams.dklen;if(a!==j)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.decodeScryptParams()",`Decryption failed: keystore.crypto.kdfparams.dklen parameter must be ${j}`,{keystore:n,dkLen:a});return {N:t,dkLen:j,name:ue,p:r,r:i,salt:e}}function Fn(n){let e=n.salt??d.randomBytes(j),t=W.N,i=W.r,r=W.p;if(n.scrypt!=null&&(n.scrypt.N!=null&&(t=n.scrypt.N),n.scrypt.r!=null&&(i=n.scrypt.r),n.scrypt.p!=null&&(r=n.scrypt.p)),t<=0||(BigInt(t)&BigInt(t-1))!==BigInt(0))throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.encodeScryptParams()","Encryption failed: invalid options.scrypt.N parameter.",{options:n,N:t});if(i<=0||!Number.isSafeInteger(i))throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.encodeScryptParams()","Encryption failed: invalid options.scrypt.r parameter.",{options:n,r:i});if(r<=0||!Number.isSafeInteger(r))throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.encodeScryptParams()","Encryption failed: invalid options.scrypt.p parameter.",{options:n,p:r});return {name:ue,dkLen:j,N:t,p:r,r:i,salt:e}}function Sn(n,e){return Dn(n,e,{scrypt:{N:W.N,r:W.r,p:W.p}})}function Dn(n,e,t){try{let i=Fn(t),r=scrypt.scrypt(e,i.salt,{N:i.N,r:i.r,p:i.p,dkLen:i.dkLen}),a=t.iv??d.randomBytes(16);if(a.length!==16)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.encryptKeystore()","Encryption failed: invalid options.iv length.",{iv:a});let o=t.uuid??d.randomBytes(16);if(o.length!==16)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.encryptKeystore()","Encryption failed: invalid options.uuid length.",{uuidRandom:o});let u=r.slice(16,32),I=aes.ctr(r.slice(0,16),a).encrypt(n);return {address:m.ofPrivateKey(n).toString(),crypto:{cipher:Ke,cipherparams:{iv:s.of(a).digits},ciphertext:s.of(I).digits,kdf:"scrypt",kdfparams:{dklen:j,n:i.N,p:i.p,r:i.r,salt:s.of(i.salt).digits},mac:v.of(T__namespace.concatBytes(u,I)).digits},id:Ln(o),version:Ge}}finally{n.fill(0),e.fill(0);}}function Bn(n,e){return Vn(n,e)}function Vn(n,e){try{if(n.crypto.cipher.toLowerCase()!==Ke)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.decryptKeystore()","Decryption failed: unsupported crypto cipher algorithm.",{cipher:n.crypto.cipher.toLowerCase()});if(n.crypto.kdf.toLowerCase()!==ue)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.decryptKeystore()","Decryption failed: unsupported crypto key derivation function.",{keyDerivationFunction:n.crypto.kdf.toLowerCase()});if(n.version!==Ge)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.decryptKeystore()","Decryption failed: unsupported keystore version.",{version:n.version});let t=Rn(n),i=scrypt.scrypt(e,t.salt,{N:t.N,r:t.r,p:t.p,dkLen:t.dkLen}),r=T__namespace.hexToBytes(n.crypto.ciphertext);if(n.crypto.mac!==v.of(T__namespace.concatBytes(i.slice(16,32),r)).digits)throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.decryptKeystore()","Decryption failed: Invalid Password for the given keystore.",{keystore:n});let a=aes.ctr(i.slice(0,16),T__namespace.hexToBytes(n.crypto.cipherparams.iv)).decrypt(r),o=m.ofPrivateKey(a).toString();if(n.address!==""&&o!==m.checksum(s.of(n.address)))throw new sdkErrors.InvalidKeystoreParams("(EXPERIMENTAL) keystore.decryptKeystore()","Decryption failed: address/password mismatch.",{keystoreAddress:n.address});return {address:o,privateKey:s.of(a).toString()}}finally{e.fill(0);}}function On(n){try{let e=JSON.parse(sdkErrors.stringifyData(n));if(e.crypto.cipher.toLowerCase()===Ke&&e.crypto.kdf.toLowerCase()===ue&&e.version===Ge)return !0}catch{}return !1}function Ln(n){n[6]=n[6]&15|64,n[8]=n[8]&63|128;let e=s.of(n).digits;return [e.substring(0,8),e.substring(8,12),e.substring(12,16),e.substring(16,20),e.substring(20,32)].join("-")}var ne={decrypt:Bn,encrypt:Sn,isValid:On};var M=!1;function Hn(n){M=n;}async function Cn(n,e){return M&&sdkLogging.VeChainSDKLogger("warning").log({title:"Experimental cryptography",messages:["Remember, you are using an experimental cryptography library.","functions: keystore.encrypt"]}),M?ne.encrypt(n,p.of(e).bytes):await te.encrypt(n,e)}async function kn(n,e){return M&&sdkLogging.VeChainSDKLogger("warning").log({title:"Experimental cryptography",messages:["Remember, you are using an experimental cryptography library.","functions: keystore.decrypt"]}),M?ne.decrypt(n,p.of(e).bytes):await te.decrypt(n,e)}function Un(n){return M&&sdkLogging.VeChainSDKLogger("warning").log({title:"Experimental cryptography",messages:["Remember, you are using an experimental cryptography library.","functions: keystore.isValid"]}),M?ne.isValid(n):te.isValid(n)}var Kn={encrypt:Cn,decrypt:kn,isValid:Un,useExperimentalCryptography:Hn};var wt=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"allowance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"}],name:"ERC20InsufficientAllowance",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"balance",type:"uint256"},{internalType:"uint256",name:"needed",type:"uint256"}],name:"ERC20InsufficientBalance",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC20InvalidApprover",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC20InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC20InvalidSender",type:"error"},{inputs:[{internalType:"address",name:"spender",type:"address"}],name:"ERC20InvalidSpender",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],de=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],name:"ERC721IncorrectOwner",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC721InsufficientApproval",type:"error"},{inputs:[{internalType:"address",name:"approver",type:"address"}],name:"ERC721InvalidApprover",type:"error"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"ERC721InvalidOperator",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"ERC721InvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"ERC721InvalidReceiver",type:"error"},{inputs:[{internalType:"address",name:"sender",type:"address"}],name:"ERC721InvalidSender",type:"error"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ERC721NonexistentToken",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"mintItem",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}],xt=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"TransferSingle",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"string",name:"value",type:"string"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"URI",type:"event"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"accounts",type:"address[]"},{internalType:"uint256[]",name:"ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"uri",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}],_e=wt,Gn=de,Mn=xt;var Xe=n=>new Uint8Array(n),_n=/(^-?\d+(\.\d+)?)$|(^-?\.\d+)$/;var Xn=n=>{if(!s.isValid(n)||s.of(n).digits.length!==64)throw new sdkErrors.InvalidDataType("dataUtils.decodeBytes32String()",`Failed to decode value ${n} to string. Value is not a valid hex string or it is not 64 characters long`,{value:n});let e=s.of(n).bytes,t=e.findIndex(i=>i===0);if(t===0){let i=e.findIndex(r=>r!==0);return p.of(e.subarray(i)).toString()}else return t!==-1?p.of(e.subarray(0,t)).toString():p.of(e).toString()},$n=(n,e="right")=>{try{let t=p.of(n).bytes;if(t.length>32)throw new sdkErrors.InvalidDataType("dataUtils.encodeBytes32String()",`Failed to encode value ${n} to bytes32 string. Value exceeds 32 bytes.`,{value:n});let i=Xe(32-t.length);return e==="left"?s.of(T__namespace.concatBytes(i,t)).toString():s.of(T__namespace.concatBytes(t,i)).toString()}catch(t){throw new sdkErrors.InvalidDataType("dataUtils.encodeBytes32String()",`Failed to encode value ${n} to bytes32 string.`,{value:n},t)}},Yn={decodeBytes32String:Xn,encodeBytes32String:$n};var We=class n{static FORMAT_TYPE="json";static NO_VALUE=s.PREFIX+"0";static NO_DATA=s.PREFIX;static TRANSFER_NFT_FUNCTION="transferFrom";static TRANSFER_TOKEN_FUNCTION="transfer";to;value;data;comment;abi;constructor(e,t,i,r,a){this.to=e,this.value=t,this.data=i,this.comment=r,this.abi=a;}amount(){return l.of(w.of(this.value).bi)}static callFunction(e,t,i,r=Q.of(l.ZERO),a){if(r.value.isFinite()&&r.value.isPositive())return new n(e.toString().toLowerCase(),s.PREFIX+r.wei.toString(s.RADIX),t.encodeData(i).toString(),a?.comment,a?.includeABI===!0?t.format(n.FORMAT_TYPE):void 0);throw new sdkErrors.InvalidDataType("Clause.callFunction","not finite positive amount",{amount:`${r.value}`})}static deployContract(e,t,i){let r=t!=null&&t!==void 0?e.digits+b.of(t.types,t.values).toHex().toString().replace(s.PREFIX,""):e.digits;return new n(null,n.NO_VALUE,s.PREFIX+r,i?.comment)}static transferNFT(e,t,i,r,a){return n.callFunction(e,B.ofAbi(de).getFunction(n.TRANSFER_NFT_FUNCTION),[t.toString(),i.toString(),r.bi.toString()],void 0,a)}static transferToken(e,t,i,r){if(i.value.isFinite()&&i.value.isPositive())return this.callFunction(e,B.ofAbi(_e).getFunction(n.TRANSFER_TOKEN_FUNCTION),[t.toString(),i.wei],void 0,r);throw new sdkErrors.InvalidDataType("Clause.transferToken","not positive integer amount",{amount:`${i.value}`})}static transferVET(e,t,i){if(t.value.isFinite()&&t.value.isPositive())return new n(e.toString().toLowerCase(),s.PREFIX+t.wei.toString(s.RADIX),n.NO_DATA,i?.comment);throw new sdkErrors.InvalidDataType("Clause.transferVET","not finite positive amount",{amount:`${t.value}`})}};var ze=class n{static BLOCK_REF_LENGTH=8;static GAS_CONSTANTS={TX_GAS:5000n,CLAUSE_GAS:16000n,CLAUSE_GAS_CONTRACT_CREATION:48000n,ZERO_GAS_DATA:4n,NON_ZERO_GAS_DATA:68n};static RLP_FIELDS=[{name:"chainTag",kind:new h(1)},{name:"blockRef",kind:new Y(8)},{name:"expiration",kind:new h(4)},{name:"clauses",kind:{item:[{name:"to",kind:new K(20)},{name:"value",kind:new h(32)},{name:"data",kind:new F}]}},{name:"gasPriceCoef",kind:new h(1)},{name:"gas",kind:new h(8)},{name:"dependsOn",kind:new K(32)},{name:"nonce",kind:new h(8)},{name:"reserved",kind:{item:new U}}];static RLP_FEATURES={name:"reserved.features",kind:new h(4)};static RLP_SIGNATURE={name:"signature",kind:new U};static RLP_SIGNED_TRANSACTION_PROFILE={name:"tx",kind:n.RLP_FIELDS.concat([n.RLP_SIGNATURE])};static RLP_UNSIGNED_TRANSACTION_PROFILE={name:"tx",kind:n.RLP_FIELDS};body;signature;constructor(e,t){this.body=e,this.signature=t;}get delegator(){if(this.isDelegated){if(this.signature!==void 0){let e=this.signature.slice(d.SIGNATURE_LENGTH,this.signature.length),t=d.recover(this.getTransactionHash(this.origin).bytes,e);return m.ofPublicKey(t)}throw new sdkErrors.UnavailableTransactionField("Transaction.delegator()","missing delegator",{fieldName:"delegator"})}throw new sdkErrors.NotDelegatedTransaction("Transaction.delegator()","not delegated transaction",void 0)}get encoded(){return this.encode(this.isSigned)}get id(){if(this.isSigned)return g.of(T__namespace.concatBytes(this.getTransactionHash().bytes,this.origin.bytes));throw new sdkErrors.UnavailableTransactionField("Transaction.id()","not signed transaction: id unavailable",{fieldName:"id"})}get intrinsicGas(){return n.intrinsicGas(this.body.clauses)}get isDelegated(){return n.isDelegated(this.body)}get isSigned(){return this.signature!==void 0?n.isSignatureValid(this.body,this.signature):!1}get origin(){if(this.signature!==void 0)return m.ofPublicKey(d.recover(this.getTransactionHash().bytes,this.signature.slice(0,d.SIGNATURE_LENGTH)));throw new sdkErrors.UnavailableTransactionField("Transaction.origin()","not signed transaction, no origin",{fieldName:"origin"})}static decode(e,t){let i=t?n.RLP_SIGNED_TRANSACTION_PROFILE:n.RLP_UNSIGNED_TRANSACTION_PROFILE,r=R.ofObjectEncoded(e,i).object,a={blockRef:r.blockRef,chainTag:r.chainTag,clauses:r.clauses,dependsOn:r.dependsOn,expiration:r.expiration,gas:r.gas,gasPriceCoef:r.gasPriceCoef,nonce:r.nonce},o=r.reserved.length>0?{...a,reserved:n.decodeReservedField(r.reserved)}:a;return r.signature!==void 0?n.of(o,r.signature):n.of(o)}getTransactionHash(e){let t=g.of(this.encode(!1));return e!==void 0?g.of(T__namespace.concatBytes(t.bytes,e.bytes)):t}static intrinsicGas(e){return e.length>0?X.of(e.reduce((t,i)=>{if(i.to!==null){if(!m.isValid(i.to)&&!i.to.includes("."))throw new sdkErrors.InvalidDataType("Transaction.intrinsicGas","invalid data type in clause: each `to` field must be a valid address.",{clause:i});t+=n.GAS_CONSTANTS.CLAUSE_GAS;}else t+=n.GAS_CONSTANTS.CLAUSE_GAS_CONTRACT_CREATION;return t+=n.computeUsedGasFor(i.data),t},n.GAS_CONSTANTS.TX_GAS),0):X.of(n.GAS_CONSTANTS.TX_GAS+n.GAS_CONSTANTS.CLAUSE_GAS,0)}static isValidBody(e){return e.chainTag!==void 0&&e.chainTag>=0&&e.chainTag<=255&&e.blockRef!==void 0&&s.isValid0x(e.blockRef)&&c.of(e.blockRef).bytes.length===n.BLOCK_REF_LENGTH&&e.expiration!==void 0&&e.clauses!==void 0&&e.gasPriceCoef!==void 0&&e.gas!==void 0&&e.dependsOn!==void 0&&e.nonce!==void 0}static of(e,t){if(n.isValidBody(e)){if(t===void 0||n.isSignatureValid(e,t))return new n(e,t);throw new sdkErrors.InvalidSecp256k1Signature("Transaction.of","invalid signature",{signature:t})}throw new sdkErrors.InvalidTransactionField("Transaction.of","invalid body",{fieldName:"body",body:e})}sign(e){if(d.isValidPrivateKey(e)){if(!this.isDelegated){let t=d.sign(this.getTransactionHash().bytes,e);return n.of(this.body,t)}throw new sdkErrors.InvalidTransactionField("Transaction.sign","delegated transaction: use signWithDelegator method",{fieldName:"delegator",body:this.body})}throw new sdkErrors.InvalidSecp256k1PrivateKey("Transaction.sign","invalid private key: ensure it is a secp256k1 key",void 0)}signAsDelegator(e,t){if(d.isValidPrivateKey(t)){if(this.isDelegated){if(this.signature!==void 0){let i=this.getTransactionHash(e).bytes;return new n(this.body,T__namespace.concatBytes(this.signature.slice(0,d.SIGNATURE_LENGTH),d.sign(i,t)))}throw new sdkErrors.InvalidTransactionField("Transaction.signAsDelegator","unsigned transaction: use signForDelegator method",{fieldName:"signature"})}throw new sdkErrors.NotDelegatedTransaction("Transaction.signAsDelegator","not delegated transaction: use sign method",void 0)}throw new sdkErrors.InvalidSecp256k1PrivateKey("Transaction.signAsDelegator","invalid delegator private key: ensure it is a secp256k1 key",void 0)}signForDelegator(e){if(d.isValidPrivateKey(e)){if(this.isDelegated){let t=this.getTransactionHash().bytes;return new n(this.body,d.sign(t,e))}throw new sdkErrors.NotDelegatedTransaction("Transaction.signForDelegator","not delegated transaction: use sign method",void 0)}throw new sdkErrors.InvalidSecp256k1PrivateKey("Transaction.signForDelegator","invalid signer private key: ensure it is a secp256k1 key",void 0)}signWithDelegator(e,t){if(d.isValidPrivateKey(e)){if(d.isValidPrivateKey(t)){if(this.isDelegated){let i=this.getTransactionHash().bytes,r=this.getTransactionHash(m.ofPublicKey(d.derivePublicKey(e))).bytes;return n.of(this.body,T__namespace.concatBytes(d.sign(i,e),d.sign(r,t)))}throw new sdkErrors.NotDelegatedTransaction("Transaction.signWithDelegator","not delegated transaction: use sign method",void 0)}throw new sdkErrors.InvalidSecp256k1PrivateKey("Transaction.signWithDelegator","invalid delegator private key: ensure it is a secp256k1 key",void 0)}throw new sdkErrors.InvalidSecp256k1PrivateKey("Transaction.signWithDelegator","invalid signer private key: ensure it is a secp256k1 key",void 0)}static computeUsedGasFor(e){if(e!==""&&!s.isValid(e))throw new sdkErrors.InvalidDataType("calculateDataUsedGas()","Invalid data type for gas calculation. Data should be a hexadecimal string.",{data:e});let t=0n;for(let i=2;i<e.length;i+=2)e.substring(i,i+2)==="00"?t+=n.GAS_CONSTANTS.ZERO_GAS_DATA:t+=n.GAS_CONSTANTS.NON_ZERO_GAS_DATA;return t}static decodeReservedField(e){if(e[e.length-1].length>0){let t=n.RLP_FEATURES.kind.buffer(e[0],n.RLP_FEATURES.name).decode();return e.length>1?{features:t,unused:e.slice(1)}:{features:t}}throw new sdkErrors.InvalidTransactionField("Transaction.decodeReservedField","invalid reserved field: fields in the `reserved` property must be properly trimmed",{fieldName:"reserved",reserved:e})}encode(e){return this.encodeBodyField({...this.body,clauses:this.body.clauses,reserved:this.encodeReservedField()},e)}encodeBodyField(e,t){return t?R.ofObject({...e,signature:Uint8Array.from(this.signature)},n.RLP_SIGNED_TRANSACTION_PROFILE).encoded:R.ofObject(e,n.RLP_UNSIGNED_TRANSACTION_PROFILE).encoded}encodeReservedField(){let e=this.body.reserved??{},i=[n.RLP_FEATURES.kind.data(e.features??0,n.RLP_FEATURES.name).encode(),...e.unused??[]];for(;i.length>0&&i[i.length-1].length===0;)i.pop();return i}static isDelegated(e){return (((e.reserved??{}).features??0)&1)===1}static isSignatureValid(e,t){let i=this.isDelegated(e)?d.SIGNATURE_LENGTH*2:d.SIGNATURE_LENGTH;return t.length===i}};var Wn="0x0000000000000000000000000000000000000000",Zn="0x0000000000000000000000000000456e65726779",zn={number:0,id:"0x00000000851caf3cfdb6e899cf5958bfb1ac3413d346d43539627e6be7ec1b4a",size:170,parentID:"0xffffffff53616c757465202620526573706563742c20457468657265756d2100",timestamp:1530316800,gasLimit:1e7,beneficiary:"0x0000000000000000000000000000000000000000",gasUsed:0,totalScore:0,txsRoot:"0x45b0cfc220ceec5b7c1c62c4d4193d38e4eba48e8815729ce75f9c0ab0e4c1c0",txsFeatures:0,stateRoot:"0x09bfdf9e24dd5cd5b63f3c1b5d58b97ff02ca0490214a021ed7d99b93867839c",receiptsRoot:"0x45b0cfc220ceec5b7c1c62c4d4193d38e4eba48e8815729ce75f9c0ab0e4c1c0",signer:"0x0000000000000000000000000000000000000000",isTrunk:!0,transactions:[]},qn={number:0,id:"0x000000000b2bce3c70bc649a02749e8687721b09ed2e15997f466536b20bb127",size:170,parentID:"0xffffffff00000000000000000000000000000000000000000000000000000000",timestamp:1530014400,gasLimit:1e7,beneficiary:"0x0000000000000000000000000000000000000000",gasUsed:0,totalScore:0,txsRoot:"0x45b0cfc220ceec5b7c1c62c4d4193d38e4eba48e8815729ce75f9c0ab0e4c1c0",txsFeatures:0,stateRoot:"0x4ec3af0acbad1ae467ad569337d2fe8576fe303928d35b8cdd91de47e9ac84bb",receiptsRoot:"0x45b0cfc220ceec5b7c1c62c4d4193d38e4eba48e8815729ce75f9c0ab0e4c1c0",signer:"0x0000000000000000000000000000000000000000",isTrunk:!0,transactions:[]},Jn={number:0,id:"0x00000000c05a20fbca2bf6ae3affba6af4a74b800b585bf7a4988aba7aea69f6",size:170,parentID:"0xffffffff00000000000000000000000000000000000000000000000000000000",timestamp:15264e5,gasLimit:1e7,beneficiary:"0x0000000000000000000000000000000000000000",gasUsed:0,totalScore:0,txsRoot:"0x45b0cfc220ceec5b7c1c62c4d4193d38e4eba48e8815729ce75f9c0ab0e4c1c0",txsFeatures:0,stateRoot:"0x93de0ffb1f33bc0af053abc2a87c4af44594f5dcb1cb879dd823686a15d68550",receiptsRoot:"0x45b0cfc220ceec5b7c1c62c4d4193d38e4eba48e8815729ce75f9c0ab0e4c1c0",signer:"0x0000000000000000000000000000000000000000",isTrunk:!0,transactions:[]},Rt={genesisBlock:zn,chainTag:74},Ft={genesisBlock:qn,chainTag:39},St={genesisBlock:Jn,chainTag:246},Qn={mainnet:Rt,testnet:Ft,solo:St};

exports.ABI = b;
exports.ABIContract = B;
exports.ABIEvent = A;
exports.ABIFunction = E;
exports.ABIItem = N;
exports.Account = be;
exports.Address = m;
exports.Blake2b256 = g;
exports.BlockId = ee;
exports.BlockRef = Te;
exports.BloomFilter = J;
exports.BufferKind = U;
exports.Certificate = ke;
exports.Clause = We;
exports.Coin = L;
exports.CompactFixedHexBlobKind = Y;
exports.ERC1155_ABI = xt;
exports.ERC20_ABI = wt;
exports.ERC721_ABI = de;
exports.FixedHexBlobKind = S;
exports.FixedPointNumber = l;
exports.HDKey = O;
exports.Hex = s;
exports.HexBlobKind = F;
exports.HexInt = w;
exports.HexUInt = c;
exports.Keccak256 = v;
exports.MAINNET_NETWORK = Rt;
exports.Mnemonic = Oe;
exports.NUMERIC_REGEX = _n;
exports.NumericKind = h;
exports.OptionalFixedHexBlobKind = K;
exports.Quantity = Le;
exports.RLP = C;
exports.RLPProfiler = R;
exports.Revision = He;
exports.SOLO_NETWORK = St;
exports.ScalarKind = f;
exports.Secp256k1 = d;
exports.Sha256 = x;
exports.TESTNET_NETWORK = Ft;
exports.ThorId = Ce;
exports.Transaction = ze;
exports.Txt = p;
exports.VET = Q;
exports.VIP180_ABI = _e;
exports.VIP181_ABI = Gn;
exports.VIP210_ABI = Mn;
exports.VTHO = X;
exports.VTHO_ADDRESS = Zn;
exports.ZERO_ADDRESS = Wn;
exports.ZERO_BYTES = Xe;
exports.assertCompactFixedHexBlobBuffer = De;
exports.assertFixedHexBlobKindBuffer = Se;
exports.assertFixedHexBlobKindData = Fe;
exports.assertValidHexBlobKindData = Re;
exports.assertValidNumericKindBuffer = Ne;
exports.core = Dt;
exports.dataUtils = Yn;
exports.decodeBufferToHexWithLeadingZeros = ln;
exports.decodeBufferToNumberOrHex = xe;
exports.encodeBigIntToBuffer = we;
exports.encodeCompactFixedHexBlob = Be;
exports.keystore = Kn;
exports.networkInfo = Qn;
exports.validateNumericKindData = ve;
