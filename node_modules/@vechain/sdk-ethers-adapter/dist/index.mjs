import { UnsupportedOperation } from '@vechain/sdk-errors';
import { BaseContract } from 'ethers';

var c=Object.defineProperty;var p=(t,r)=>{for(var n in r)c(t,n,{get:r[n],enumerable:!0});};var a={};p(a,{contractAdapter:()=>h,factoryAdapter:()=>C,helpers:()=>o});var d=async(t,r)=>(await r.thorClient.transactions.waitForTransaction(t))?.outputs[0].contractAddress??"",o={getContractAddress:d};var h=(t,r)=>(t.getAddress=async function(){return await o.getContractAddress(t.deploymentTransaction()?.hash??"",r)},t);function C(t,r){return t.deploy=async function(...n){let s=await this.getDeployTransaction(...n);if(this.runner==null||typeof this.runner.sendTransaction!="function")throw new UnsupportedOperation("factoryAdapter()","Runner does not support sending transactions",{operation:"sendTransaction"});let e=await this.runner.sendTransaction(s),i=await r.thorClient.transactions.waitForTransaction(e.hash);return new BaseContract(i?.outputs[0].contractAddress??"",this.interface,this.runner,e)},t}

export { a as adapters, h as contractAdapter, C as factoryAdapter, o as helpers };
