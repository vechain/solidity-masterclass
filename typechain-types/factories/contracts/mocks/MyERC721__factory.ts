/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyERC721,
  MyERC721Interface,
} from "../../../contracts/mocks/MyERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002df438038062002df4833981810160405281019062000037919062000288565b806040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b00000000000000000000000000000000000000000000000000000000008152508160009081620000b5919062000534565b508060019081620000c7919062000534565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200013691906200062c565b60405180910390fd5b62000150816200015860201b60201c565b505062000649565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002508262000223565b9050919050565b620002628162000243565b81146200026e57600080fd5b50565b600081519050620002828162000257565b92915050565b600060208284031215620002a157620002a06200021e565b5b6000620002b18482850162000271565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200033c57607f821691505b602082108103620003525762000351620002f4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003bc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200037d565b620003c886836200037d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004156200040f6200040984620003e0565b620003ea565b620003e0565b9050919050565b6000819050919050565b6200043183620003f4565b6200044962000440826200041c565b8484546200038a565b825550505050565b600090565b6200046062000451565b6200046d81848462000426565b505050565b5b8181101562000495576200048960008262000456565b60018101905062000473565b5050565b601f821115620004e457620004ae8162000358565b620004b9846200036d565b81016020851015620004c9578190505b620004e1620004d8856200036d565b83018262000472565b50505b505050565b600082821c905092915050565b60006200050960001984600802620004e9565b1980831691505092915050565b6000620005248383620004f6565b9150826002028217905092915050565b6200053f82620002ba565b67ffffffffffffffff8111156200055b576200055a620002c5565b5b62000567825462000323565b6200057482828562000499565b600060209050601f831160018114620005ac576000841562000597578287015190505b620005a3858262000516565b86555062000613565b601f198416620005bc8662000358565b60005b82811015620005e657848901518255600182019150602085019450602081019050620005bf565b8683101562000606578489015162000602601f891682620004f6565b8355505b6001600288020188555050505b505050505050565b620006268162000243565b82525050565b60006020820190506200064360008301846200061b565b92915050565b61279b80620006596000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063a22cb46511610071578063a22cb46514610343578063b88d4fde1461035f578063c87b56dd1461037b578063e985e9c5146103ab578063f2fde38b146103db5761012c565b806370a08231146102b1578063715018a6146102e15780638da5cb5b146102eb57806395d89b4114610309578063a1448194146103275761012c565b806323b872dd116100f457806323b872dd146101e95780632f745c591461020557806342842e0e146102355780634f6ccce7146102515780636352211e146102815761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af57806318160ddd146101cb575b600080fd5b61014b60048036038101906101469190611f24565b6103f7565b6040516101589190611f6c565b60405180910390f35b610169610471565b6040516101769190612017565b60405180910390f35b6101996004803603810190610194919061206f565b610503565b6040516101a691906120dd565b60405180910390f35b6101c960048036038101906101c49190612124565b61051f565b005b6101d3610535565b6040516101e09190612173565b60405180910390f35b61020360048036038101906101fe919061218e565b610542565b005b61021f600480360381019061021a9190612124565b610644565b60405161022c9190612173565b60405180910390f35b61024f600480360381019061024a919061218e565b6106ed565b005b61026b6004803603810190610266919061206f565b61070d565b6040516102789190612173565b60405180910390f35b61029b6004803603810190610296919061206f565b610783565b6040516102a891906120dd565b60405180910390f35b6102cb60048036038101906102c691906121e1565b610795565b6040516102d89190612173565b60405180910390f35b6102e961084f565b005b6102f3610863565b60405161030091906120dd565b60405180910390f35b61031161088d565b60405161031e9190612017565b60405180910390f35b610341600480360381019061033c9190612124565b61091f565b005b61035d6004803603810190610358919061223a565b610935565b005b610379600480360381019061037491906123af565b61094b565b005b6103956004803603810190610390919061206f565b610968565b6040516103a29190612017565b60405180910390f35b6103c560048036038101906103c09190612432565b6109d1565b6040516103d29190611f6c565b60405180910390f35b6103f560048036038101906103f091906121e1565b610a65565b005b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061046a575061046982610aeb565b5b9050919050565b606060008054610480906124a1565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac906124a1565b80156104f95780601f106104ce576101008083540402835291602001916104f9565b820191906000526020600020905b8154815290600101906020018083116104dc57829003601f168201915b5050505050905090565b600061050e82610bcd565b5061051882610c55565b9050919050565b610531828261052c610c92565b610c9a565b5050565b6000600880549050905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105b45760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105ab91906120dd565b60405180910390fd5b60006105c883836105c3610c92565b610cac565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461063e578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610635939291906124d2565b60405180910390fd5b50505050565b600061064f83610795565b82106106945782826040517fa57d13dc00000000000000000000000000000000000000000000000000000000815260040161068b929190612509565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6107088383836040518060200160405280600081525061094b565b505050565b6000610717610535565b821061075d576000826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610754929190612509565b60405180910390fd5b6008828154811061077157610770612532565b5b90600052602060002001549050919050565b600061078e82610bcd565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108085760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107ff91906120dd565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610857610dc9565b6108616000610e50565b565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461089c906124a1565b80601f01602080910402602001604051908101604052809291908181526020018280546108c8906124a1565b80156109155780601f106108ea57610100808354040283529160200191610915565b820191906000526020600020905b8154815290600101906020018083116108f857829003601f168201915b5050505050905090565b610927610dc9565b6109318282610f16565b5050565b610947610940610c92565b8383610f34565b5050565b610956848484610542565b610962848484846110a3565b50505050565b606061097382610bcd565b50600061097e61125a565b9050600081511161099e57604051806020016040528060008152506109c9565b806109a884611271565b6040516020016109b992919061259d565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a6d610dc9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610adf5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ad691906120dd565b60405180910390fd5b610ae881610e50565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610bb657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610bc65750610bc58261133f565b5b9050919050565b600080610bd9836113a9565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c4c57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c439190612173565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610ca783838360016113e6565b505050565b600080610cba8585856115ab565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cfe57610cf9846117c5565b610d3d565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610d3c57610d3b818561180e565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610d7f57610d7a8461196f565b610dbe565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dbd57610dbc8585611a40565b5b5b809150509392505050565b610dd1610c92565b73ffffffffffffffffffffffffffffffffffffffff16610def610863565b73ffffffffffffffffffffffffffffffffffffffff1614610e4e57610e12610c92565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e4591906120dd565b60405180910390fd5b565b6000600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f30828260405180602001604052806000815250611acb565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fa557816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610f9c91906120dd565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516110969190611f6c565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611254578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026110e7610c92565b8685856040518563ffffffff1660e01b81526004016111099493929190612616565b6020604051808303816000875af192505050801561114557506040513d601f19601f820116820180604052508101906111429190612677565b60015b6111c9573d8060008114611175576040519150601f19603f3d011682016040523d82523d6000602084013e61117a565b606091505b5060008151036111c157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111b891906120dd565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461125257836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161124991906120dd565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606000600161128084611ae7565b01905060008167ffffffffffffffff81111561129f5761129e612284565b5b6040519080825280601f01601f1916602001820160405280156112d15781602001600182028036833780820191505090505b509050600082602001820190505b600115611334578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611328576113276126a4565b5b049450600085036112df575b819350505050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061141f5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561155357600061142f84610bcd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561149a57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156114ad57506114ab81846109d1565b155b156114ef57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114e691906120dd565b60405180910390fd5b811561155157838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6000806115b7846113a9565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146115f9576115f8818486611c3a565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461168a5761163b6000856000806113e6565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461170d576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505060019003906000526020600020016000909190919091505550565b600061181983610795565b90506000600760008481526020019081526020016000205490508181146118fe576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816007600083815260200190815260200160002081905550505b6007600084815260200190815260200160002060009055600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b600060016008805490506119839190612702565b90506000600960008481526020019081526020016000205490506000600883815481106119b3576119b2612532565b5b9060005260206000200154905080600883815481106119d5576119d4612532565b5b906000526020600020018190555081600960008381526020019081526020016000208190555060096000858152602001908152602001600020600090556008805480611a2457611a23612736565b5b6001900381819060005260206000200160009055905550505050565b60006001611a4d84610795565b611a579190612702565b905081600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806007600084815260200190815260200160002081905550505050565b611ad58383611cfe565b611ae260008484846110a3565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611b45577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611b3b57611b3a6126a4565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611b82576d04ee2d6d415b85acef81000000008381611b7857611b776126a4565b5b0492506020810190505b662386f26fc100008310611bb157662386f26fc100008381611ba757611ba66126a4565b5b0492506010810190505b6305f5e1008310611bda576305f5e1008381611bd057611bcf6126a4565b5b0492506008810190505b6127108310611bff576127108381611bf557611bf46126a4565b5b0492506004810190505b60648310611c225760648381611c1857611c176126a4565b5b0492506002810190505b600a8310611c31576001810190505b80915050919050565b611c45838383611df7565b611cf957600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611cba57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611cb19190612173565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611cf0929190612509565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d705760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611d6791906120dd565b60405180910390fd5b6000611d7e83836000610cac565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611df25760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611de991906120dd565b60405180910390fd5b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611eaf57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611e705750611e6f84846109d1565b5b80611eae57508273ffffffffffffffffffffffffffffffffffffffff16611e9683610c55565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f0181611ecc565b8114611f0c57600080fd5b50565b600081359050611f1e81611ef8565b92915050565b600060208284031215611f3a57611f39611ec2565b5b6000611f4884828501611f0f565b91505092915050565b60008115159050919050565b611f6681611f51565b82525050565b6000602082019050611f816000830184611f5d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611fc1578082015181840152602081019050611fa6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611fe982611f87565b611ff38185611f92565b9350612003818560208601611fa3565b61200c81611fcd565b840191505092915050565b600060208201905081810360008301526120318184611fde565b905092915050565b6000819050919050565b61204c81612039565b811461205757600080fd5b50565b60008135905061206981612043565b92915050565b60006020828403121561208557612084611ec2565b5b60006120938482850161205a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120c78261209c565b9050919050565b6120d7816120bc565b82525050565b60006020820190506120f260008301846120ce565b92915050565b612101816120bc565b811461210c57600080fd5b50565b60008135905061211e816120f8565b92915050565b6000806040838503121561213b5761213a611ec2565b5b60006121498582860161210f565b925050602061215a8582860161205a565b9150509250929050565b61216d81612039565b82525050565b60006020820190506121886000830184612164565b92915050565b6000806000606084860312156121a7576121a6611ec2565b5b60006121b58682870161210f565b93505060206121c68682870161210f565b92505060406121d78682870161205a565b9150509250925092565b6000602082840312156121f7576121f6611ec2565b5b60006122058482850161210f565b91505092915050565b61221781611f51565b811461222257600080fd5b50565b6000813590506122348161220e565b92915050565b6000806040838503121561225157612250611ec2565b5b600061225f8582860161210f565b925050602061227085828601612225565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6122bc82611fcd565b810181811067ffffffffffffffff821117156122db576122da612284565b5b80604052505050565b60006122ee611eb8565b90506122fa82826122b3565b919050565b600067ffffffffffffffff82111561231a57612319612284565b5b61232382611fcd565b9050602081019050919050565b82818337600083830152505050565b600061235261234d846122ff565b6122e4565b90508281526020810184848401111561236e5761236d61227f565b5b612379848285612330565b509392505050565b600082601f8301126123965761239561227a565b5b81356123a684826020860161233f565b91505092915050565b600080600080608085870312156123c9576123c8611ec2565b5b60006123d78782880161210f565b94505060206123e88782880161210f565b93505060406123f98782880161205a565b925050606085013567ffffffffffffffff81111561241a57612419611ec7565b5b61242687828801612381565b91505092959194509250565b6000806040838503121561244957612448611ec2565b5b60006124578582860161210f565b92505060206124688582860161210f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806124b957607f821691505b6020821081036124cc576124cb612472565b5b50919050565b60006060820190506124e760008301866120ce565b6124f46020830185612164565b61250160408301846120ce565b949350505050565b600060408201905061251e60008301856120ce565b61252b6020830184612164565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b600061257782611f87565b6125818185612561565b9350612591818560208601611fa3565b80840191505092915050565b60006125a9828561256c565b91506125b5828461256c565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006125e8826125c1565b6125f281856125cc565b9350612602818560208601611fa3565b61260b81611fcd565b840191505092915050565b600060808201905061262b60008301876120ce565b61263860208301866120ce565b6126456040830185612164565b818103606083015261265781846125dd565b905095945050505050565b60008151905061267181611ef8565b92915050565b60006020828403121561268d5761268c611ec2565b5b600061269b84828501612662565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061270d82612039565b915061271883612039565b92508282039050818111156127305761272f6126d3565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220f4b1d10c86bfc5ee35b9556c0e029d840580df7cbae05baa2478a18f738f10fd64736f6c63430008140033";

type MyERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyERC721__factory extends ContractFactory {
  constructor(...args: MyERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MyERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyERC721__factory {
    return super.connect(runner) as MyERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC721Interface {
    return new Interface(_abi) as MyERC721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyERC721 {
    return new Contract(address, _abi, runner) as unknown as MyERC721;
  }
}
